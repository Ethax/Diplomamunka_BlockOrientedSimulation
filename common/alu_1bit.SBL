[Version]
7.1.1.313
[File Access]
0   
42419
! 
! 
! 
! 
! 
! Karosszéria gyártósor
! Miklós Árpád
! SZTE
4   2
OPERAND_A
3   1
OPERAND_B
4   1
CARRY_IN
5   1
OPERATION
13   1
OUT
12   1
CARRY_OUT
18   1
[Export Parameter Count]
0
[Block Count]
25
[Block #0]
405   MULTISWITCH
SWITCH
450 175 521 277  100
5
1
0 0 0   0
[Block #1]
355   LOGIC2
AND
225 250 296 301  100
2
1
0 0 0   0
0
[Block #2]
355   LOGIC2
OR
225 325 296 376  100
2
1
0 0 0   0
1
[Block #3]
344   FCT1
OPERAND_A
25 175 96 226  100
1
1
0 0 0   0
8
x
[Block #4]
344   FCT1
OPERAND_B
25 250 96 301  100
1
1
0 0 0   0
8
x
[Block #5]
344   FCT1
CARRY_IN
25 475 96 526  100
1
1
0 0 0   0
8
x
[Block #6]
355   LOGIC2
XOR
225 175 296 226  100
2
1
0 0 0   0
5
[Block #7]
355   LOGIC2
XOR
225 400 296 451  100
2
1
0 0 0   0
5
[Block #8]
355   LOGIC2
AND
350 475 421 526  100
2
1
0 0 0   0
0
[Block #9]
355   LOGIC2
AND
225 525 296 576  100
2
1
0 0 0   0
0
[Block #10]
355   LOGIC2
OR
450 500 521 551  100
2
1
0 0 0   0
1
[Block #11]
355   LOGIC2
XOR
350 400 421 451  100
2
1
0 0 0   0
5
[Block #12]
344   FCT1
OUT
550 200 621 251  100
1
1
0 0 0   0
8
x
[Block #13]
344   FCT1
OPERATION
25 25 96 76  100
1
1
0 0 0   0
8
x
[Block #14]
306   CONST
CONST: 1
150 100 221 151  100
0
1
0 0 0   0
 1.00000000000000E+0000  0
[Block #15]
306   CONST
CONST: 4
275 100 346 151  100
0
1
0 0 0   0
 4.00000000000000E+0000  0
[Block #16]
345   FCT2
MAX(X, Y)
150 25 221 76  100
2
1
0 0 0   0
9
x+y
[Block #17]
345   FCT2
MIN(X, Y)
275 25 346 76  100
2
1
0 0 0   0
10
x+y
[Block #18]
344   FCT1
CARRY_OUT
550 500 621 551  100
1
1
0 0 0   0
8
x
[Block #19]
0   Text
Text
675 200 823 221  100
0
0
0 0 0   0
Ekvivalens C kód:
14   0   0   0   16777215   0   0
ARIAL
[Block #20]
0   Text
Text
675 225 1506 624  100
0
0
0 0 0   0
#define MIN(a, b) (((a) < (b)) ? (a) : (b))#define MAX(a, b) (((a) > (b)) ? (a) : (b))bool alu_1bit(bool operand_a, bool operand_b, unsigned char operation, bool carry_in, bool* carry_out) {  /* A mûveletválasztó értékének az [1, 4] értéktartományra kényszerítése. */  operation = MAX(operation, 1);  operation = MIN(operation, 4);    /* Az átvitel kiszámítása. */  *carry_out = (operand_a && operand_b) | (carry_in && (operand_a ^ operand_b));    /* A kiválasztott mûvelet elvégzése. */  switch(operation) {  case 1:    return operand_a ^ operand_b;  case 2:    return operand_a && operand_b;  case 3:    return operand_a | operand_b;  case 4:    return (operand_a ^ operand_b) ^ carry_in;  default:    return false;  }}
10   0   0   0   16777215   0   0
Courier New
[Block #21]
0   Text
Text
675 25 733 46  100
0
0
0 0 0   0
Leírás:
14   0   0   0   16777215   0   0
ARIAL
[Block #22]
0   Text
Text
675 50 1218 168  100
0
0
0 0 0   0
Egy egyszerû 1-bites ALU (aritmetikai-logikai egység), ami a XOR, AND, OR és azösszeadás mûveleteket tudja.A mûveletek között a mûveletválasztó bemenettel lehet váltani, a következõk alapján:1 - XOR (kizáró vagy)2 - AND (és)3 - OR (vagy)4 - teljes összeadás
11   0   0   0   16777215   0   0
Arial
[Block #23]
0   Text
Text
675 650 781 671  100
0
0
0 0 0   0
Megjegyzés:
14   0   0   0   16777215   0   0
ARIAL
[Block #24]
0   Text
Text
675 675 1170 708  100
0
0
0 0 0   0
A fenti C kód csak szemléltetõ jellegû, és csak a blokkdiagram mûködésénekkönnyebb megértését szolgálja.
11   0   0   0   16777215   0   0
Arial
[Connection Count]
27
[Connection #0]
10   1   18   1   0   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #1]
0   1   12   1   0   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #2]
8   1   10   1   0   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #3]
11   1   0   5   0   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #4]
7   1   11   1   0   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #5]
13   1   16   1   33023   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #6]
16   1   17   1   33023   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #7]
7   1   8   2   0   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #8]
15   1   17   2   0   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #9]
14   1   16   2   0   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #10]
17   1   0   1   33023   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #11]
3   1   6   1   16711680   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #12]
4   1   1   2   255   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #13]
3   1   1   1   16711680   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #14]
4   1   6   2   255   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #15]
4   1   2   2   255   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #16]
3   1   2   1   16711680   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #17]
4   1   7   2   255   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #18]
3   1   7   1   16711680   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #19]
4   1   9   2   255   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #20]
3   1   9   1   16711680   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #21]
6   1   0   2   0   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #22]
9   1   10   2   0   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #23]
1   1   0   3   0   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #24]
2   1   0   4   0   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #25]
5   1   8   1   32768   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Connection #26]
5   1   11   2   32768   -1   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
[Simulation Parameters]
 1.00000000000000E+0001    1.00000000000000E-0002   0   2   1  0   1   1   2   0   4   0
[Logical Levels]
 0.00000000000000E+0000    5.00000000000000E+0000    2.50000000000000E+0000
[Frame Count]
0
[Optimization Parameters Count]
0
[Optimization Control Parameters]
20   5   100   3   10   1   10   1   12345
 1.00000000000000E+0000    0.00000000000000E+0000    0.00000000000000E+0000
OPT.DAT
0
1
[Batch Parameters Count]
0
[Message Options]
BORIS.MSG
